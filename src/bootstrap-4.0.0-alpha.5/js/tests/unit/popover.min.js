$(function(){"use strict";QUnit.module("popover plugin"),QUnit.test("should be defined on jquery object",function(e){e.expect(1),e.ok($(document.body).popover,"popover method is defined")}),QUnit.module("popover",{beforeEach:function(){$.fn.bootstrapPopover=$.fn.popover.noConflict()},afterEach:function(){$.fn.popover=$.fn.bootstrapPopover,delete $.fn.bootstrapPopover,$(".popover").remove()}}),QUnit.test("should provide no conflict",function(e){e.expect(1),e.strictEqual($.fn.popover,void 0,"popover was set back to undefined (org value)")}),QUnit.test("should throw explicit error on undefined method",function(e){e.expect(1);var n=$("<div/>");n.bootstrapPopover();try{n.bootstrapPopover("noMethod")}catch(t){e.strictEqual(t.message,'No method named "noMethod"')}}),QUnit.test("should return jquery collection containing the element",function(e){e.expect(2);var n=$("<div/>"),t=n.bootstrapPopover();e.ok(t instanceof $,"returns jquery collection"),e.strictEqual(t[0],n[0],"collection contains element")}),QUnit.test("should render popover element",function(e){e.expect(2);var n=$('<a href="#" title="mdo" data-content="https://twitter.com/mdo">@mdo</a>').appendTo("#qunit-fixture").bootstrapPopover("show");e.notEqual($(".popover").length,0,"popover was inserted"),n.bootstrapPopover("hide"),e.strictEqual($(".popover").length,0,"popover removed")}),QUnit.test("should store popover instance in popover data object",function(e){e.expect(1);var n=$('<a href="#" title="mdo" data-content="https://twitter.com/mdo">@mdo</a>').bootstrapPopover();e.ok(n.data("bs.popover"),"popover instance exists")}),QUnit.test("should store popover trigger in popover instance data object",function(e){e.expect(1);var n=$('<a href="#" title="ResentedHook">@ResentedHook</a>').appendTo("#qunit-fixture").bootstrapPopover();n.bootstrapPopover("show"),e.ok($(".popover").data("bs.popover"),"popover trigger stored in instance data")}),QUnit.test("should get title and content from options",function(e){e.expect(4);var n=$('<a href="#">@fat</a>').appendTo("#qunit-fixture").bootstrapPopover({title:function(){return"@fat"},content:function(){return"loves writing tests （╯°□°）╯︵ ┻━┻"}});n.bootstrapPopover("show"),e.notEqual($(".popover").length,0,"popover was inserted"),e.strictEqual($(".popover .popover-title").text(),"@fat","title correctly inserted"),e.strictEqual($(".popover .popover-content").text(),"loves writing tests （╯°□°）╯︵ ┻━┻","content correctly inserted"),n.bootstrapPopover("hide"),e.strictEqual($(".popover").length,0,"popover was removed")}),QUnit.test("should allow DOMElement title and content (html: true)",function(e){e.expect(5);var n=document.createTextNode("@glebm <3 writing tests"),t=$("<i>¯\\_(ツ)_/¯</i>").get(0),r=$('<a href="#" rel="tooltip"/>').appendTo("#qunit-fixture").bootstrapPopover({html:!0,title:n,content:t});r.bootstrapPopover("show"),e.notEqual($(".popover").length,0,"popover inserted"),e.strictEqual($(".popover .popover-title").text(),"@glebm <3 writing tests","title inserted"),e.ok($.contains($(".popover").get(0),n),"title node moved, not copied"),e.strictEqual($(".popover .popover-content").html().toLowerCase(),"<i>¯\\_(ツ)_/¯</i>","content inserted"),e.ok($.contains($(".popover").get(0),t),"content node moved, not copied")}),QUnit.test("should allow DOMElement title and content (html: false)",function(e){e.expect(5);var n=document.createTextNode("@glebm <3 writing tests"),t=$("<i>¯\\_(ツ)_/¯</i>").get(0),r=$('<a href="#" rel="tooltip"/>').appendTo("#qunit-fixture").bootstrapPopover({title:n,content:t});r.bootstrapPopover("show"),e.notEqual($(".popover").length,0,"popover inserted"),e.strictEqual($(".popover .popover-title").text(),"@glebm <3 writing tests","title inserted"),e.ok(!$.contains($(".popover").get(0),n),"title node copied, not moved"),e.strictEqual($(".popover .popover-content").html(),"¯\\_(ツ)_/¯","content inserted"),e.ok(!$.contains($(".popover").get(0),t),"content node copied, not moved")}),QUnit.test("should not duplicate HTML object",function(e){e.expect(6);var n=$("<div/>").html("loves writing tests （╯°□°）╯︵ ┻━┻"),t=$('<a href="#">@fat</a>').appendTo("#qunit-fixture").bootstrapPopover({html:!0,content:function(){return n}});t.bootstrapPopover("show"),e.notEqual($(".popover").length,0,"popover was inserted"),e.equal($(".popover .popover-content").html(),n[0].outerHTML,"content correctly inserted"),t.bootstrapPopover("hide"),e.strictEqual($(".popover").length,0,"popover was removed"),t.bootstrapPopover("show"),e.notEqual($(".popover").length,0,"popover was inserted"),e.equal($(".popover .popover-content").html(),n[0].outerHTML,"content correctly inserted"),t.bootstrapPopover("hide"),e.strictEqual($(".popover").length,0,"popover was removed")}),QUnit.test("should get title and content from attributes",function(e){e.expect(4);var n=$('<a href="#" title="@mdo" data-content="loves data attributes (づ｡◕‿‿◕｡)づ ︵ ┻━┻" >@mdo</a>').appendTo("#qunit-fixture").bootstrapPopover().bootstrapPopover("show");e.notEqual($(".popover").length,0,"popover was inserted"),e.strictEqual($(".popover .popover-title").text(),"@mdo","title correctly inserted"),e.strictEqual($(".popover .popover-content").text(),"loves data attributes (づ｡◕‿‿◕｡)づ ︵ ┻━┻","content correctly inserted"),n.bootstrapPopover("hide"),e.strictEqual($(".popover").length,0,"popover was removed")}),QUnit.test("should get title and content from attributes ignoring options passed via js",function(e){e.expect(4);var n=$('<a href="#" title="@mdo" data-content="loves data attributes (づ｡◕‿‿◕｡)づ ︵ ┻━┻" >@mdo</a>').appendTo("#qunit-fixture").bootstrapPopover({title:"ignored title option",content:"ignored content option"}).bootstrapPopover("show");e.notEqual($(".popover").length,0,"popover was inserted"),e.strictEqual($(".popover .popover-title").text(),"@mdo","title correctly inserted"),e.strictEqual($(".popover .popover-content").text(),"loves data attributes (づ｡◕‿‿◕｡)づ ︵ ┻━┻","content correctly inserted"),n.bootstrapPopover("hide"),e.strictEqual($(".popover").length,0,"popover was removed")}),QUnit.test("should respect custom template",function(e){e.expect(3);var n=$('<a href="#">@fat</a>').appendTo("#qunit-fixture").bootstrapPopover({title:"Test",content:"Test",template:'<div class="popover foobar"><div class="arrow"></div><div class="inner"><h3 class="title"/><div class="content"><p/></div></div></div>'});n.bootstrapPopover("show"),e.notEqual($(".popover").length,0,"popover was inserted"),e.ok($(".popover").hasClass("foobar"),"custom class is present"),n.bootstrapPopover("hide"),e.strictEqual($(".popover").length,0,"popover was removed")}),QUnit.test("should destroy popover",function(e){e.expect(7);var n=$("<div/>").bootstrapPopover({trigger:"hover"}).on("click.foo",$.noop);e.ok(n.data("bs.popover"),"popover has data"),e.ok($._data(n[0],"events").mouseover&&$._data(n[0],"events").mouseout,"popover has hover event"),e.strictEqual($._data(n[0],"events").click[0].namespace,"foo","popover has extra click.foo event"),n.bootstrapPopover("show"),n.bootstrapPopover("dispose"),e.ok(!n.hasClass("in"),"popover is hidden"),e.ok(!n.data("popover"),"popover does not have data"),e.strictEqual($._data(n[0],"events").click[0].namespace,"foo","popover still has click.foo"),e.ok(!$._data(n[0],"events").mouseover&&!$._data(n[0],"events").mouseout,"popover does not have any events")}),QUnit.test("should render popover element using delegated selector",function(e){e.expect(2);var n=$('<div><a href="#" title="mdo" data-content="http://twitter.com/mdo">@mdo</a></div>').appendTo("#qunit-fixture").bootstrapPopover({selector:"a",trigger:"click"});n.find("a").trigger("click"),e.notEqual($(".popover").length,0,"popover was inserted"),n.find("a").trigger("click"),e.strictEqual($(".popover").length,0,"popover was removed")}),QUnit.test("should detach popover content rather than removing it so that event handlers are left intact",function(e){e.expect(1);var n=$('<div class="content-with-handler"><a class="btn btn-warning">Button with event handler</a></div>').appendTo("#qunit-fixture"),t=!1;$(".content-with-handler .btn").on("click",function(){t=!0});var r=$('<div><a href="#">Show popover</a></div>').appendTo("#qunit-fixture").bootstrapPopover({html:!0,trigger:"manual",container:"body",content:function(){return n}}),a=e.async();r.one("shown.bs.popover",function(){r.one("hidden.bs.popover",function(){r.one("shown.bs.popover",function(){$(".content-with-handler .btn").trigger("click"),r.bootstrapPopover("dispose"),e.ok(t,"content's event handler still present"),a()}).bootstrapPopover("show")}).bootstrapPopover("hide")}).bootstrapPopover("show")}),QUnit.test("should do nothing when an attempt is made to hide an uninitialized popover",function(e){e.expect(1);var n=$('<span data-toggle="popover" data-title="some title" data-content="some content">some text</span>').appendTo("#qunit-fixture").on("hidden.bs.popover shown.bs.popover",function(){e.ok(!1,"should not fire any popover events")}).bootstrapPopover("hide");e.strictEqual(n.data("bs.popover"),void 0,"should not initialize the popover")}),QUnit.test("should fire inserted event",function(e){e.expect(2);var n=e.async();$('<a href="#">@Johann-S</a>').appendTo("#qunit-fixture").on("inserted.bs.popover",function(){e.notEqual($(".popover").length,0,"popover was inserted"),e.ok(!0,"inserted event fired"),n()}).bootstrapPopover({title:"Test",content:"Test"}).bootstrapPopover("show")})});