$(function(){"use strict";QUnit.module("tooltip plugin"),QUnit.test("should be defined on jquery object",function(e){e.expect(1),e.ok($(document.body).tooltip,"tooltip method is defined")}),QUnit.module("tooltip",{beforeEach:function(){$.fn.bootstrapTooltip=$.fn.tooltip.noConflict()},afterEach:function(){$.fn.tooltip=$.fn.bootstrapTooltip,delete $.fn.bootstrapTooltip,$(".tooltip").remove()}}),QUnit.test("should provide no conflict",function(e){e.expect(1),e.strictEqual($.fn.tooltip,void 0,"tooltip was set back to undefined (org value)")}),QUnit.test("should throw explicit error on undefined method",function(e){e.expect(1);var n=$("<div/>");n.bootstrapTooltip();try{n.bootstrapTooltip("noMethod")}catch(t){e.strictEqual(t.message,'No method named "noMethod"')}}),QUnit.test("should return jquery collection containing the element",function(e){e.expect(2);var n=$("<div/>"),t=n.bootstrapTooltip();e.ok(t instanceof $,"returns jquery collection"),e.strictEqual(t[0],n[0],"collection contains element")}),QUnit.test("should expose default settings",function(e){e.expect(1),e.ok($.fn.bootstrapTooltip.Constructor.Default,"defaults is defined")}),QUnit.test("should empty title attribute",function(e){e.expect(1);var n=$('<a href="#" rel="tooltip" title="Another tooltip"/>').bootstrapTooltip();e.strictEqual(n.attr("title"),"","title attribute was emptied")}),QUnit.test("should add data attribute for referencing original title",function(e){e.expect(1);var n=$('<a href="#" rel="tooltip" title="Another tooltip"/>').bootstrapTooltip();e.strictEqual(n.attr("data-original-title"),"Another tooltip","original title preserved in data attribute")}),QUnit.test("should add aria-describedby to the trigger on show",function(e){e.expect(3);var n=$('<a href="#" rel="tooltip" title="Another tooltip"/>').bootstrapTooltip().appendTo("#qunit-fixture").bootstrapTooltip("show"),t=$(".tooltip").attr("id");e.strictEqual($("#"+t).length,1,"has a unique id"),e.strictEqual($(".tooltip").attr("aria-describedby"),n.attr("id"),"tooltip id and aria-describedby on trigger match"),e.ok(n[0].hasAttribute("aria-describedby"),"trigger has aria-describedby")}),QUnit.test("should remove aria-describedby from trigger on hide",function(e){e.expect(2);var n=$('<a href="#" rel="tooltip" title="Another tooltip"/>').bootstrapTooltip().appendTo("#qunit-fixture");n.bootstrapTooltip("show"),e.ok(n[0].hasAttribute("aria-describedby"),"trigger has aria-describedby"),n.bootstrapTooltip("hide"),e.ok(!n[0].hasAttribute("aria-describedby"),"trigger does not have aria-describedby")}),QUnit.test("should assign a unique id tooltip element",function(e){e.expect(2),$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip("show");var n=$(".tooltip").attr("id");e.strictEqual($("#"+n).length,1,"tooltip has unique id"),e.strictEqual(n.indexOf("tooltip"),0,"tooltip id has prefix")}),QUnit.test("should place tooltips relative to placement option",function(e){e.expect(2);var n=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({placement:"bottom"});n.bootstrapTooltip("show"),e.ok($(".tooltip").is(".fade.bs-tether-element-attached-top.bs-tether-element-attached-center.in"),"has correct classes applied"),n.bootstrapTooltip("hide"),e.strictEqual(n.data("bs.tooltip").tip.parentNode,null,"tooltip removed")}),QUnit.test("should allow html entities",function(e){e.expect(2);var n=$('<a href="#" rel="tooltip" title="&lt;b&gt;@fat&lt;/b&gt;"/>').appendTo("#qunit-fixture").bootstrapTooltip({html:!0});n.bootstrapTooltip("show"),e.notEqual($(".tooltip b").length,0,"b tag was inserted"),n.bootstrapTooltip("hide"),e.strictEqual(n.data("bs.tooltip").tip.parentNode,null,"tooltip removed")}),QUnit.test("should allow DOMElement title (html: false)",function(e){e.expect(3);var n=document.createTextNode("<3 writing tests"),t=$('<a href="#" rel="tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({title:n});t.bootstrapTooltip("show"),e.notEqual($(".tooltip").length,0,"tooltip inserted"),e.strictEqual($(".tooltip").text(),"<3 writing tests","title inserted"),e.ok(!$.contains($(".tooltip").get(0),n),"title node copied, not moved")}),QUnit.test("should allow DOMElement title (html: true)",function(e){e.expect(3);var n=document.createTextNode("<3 writing tests"),t=$('<a href="#" rel="tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({html:!0,title:n});t.bootstrapTooltip("show"),e.notEqual($(".tooltip").length,0,"tooltip inserted"),e.strictEqual($(".tooltip").text(),"<3 writing tests","title inserted"),e.ok($.contains($(".tooltip").get(0),n),"title node moved, not copied")}),QUnit.test("should respect custom classes",function(e){e.expect(2);var n=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({template:'<div class="tooltip some-class"><div class="tooltip-arrow"/><div class="tooltip-inner"/></div>'});n.bootstrapTooltip("show"),e.ok($(".tooltip").hasClass("some-class"),"custom class is present"),n.bootstrapTooltip("hide"),e.strictEqual(n.data("bs.tooltip").tip.parentNode,null,"tooltip removed")}),QUnit.test("should fire show event",function(e){e.expect(1);var n=e.async();$('<div title="tooltip title"/>').on("show.bs.tooltip",function(){e.ok(!0,"show event fired"),n()}).bootstrapTooltip("show")}),QUnit.test("should fire inserted event",function(e){e.expect(2);var n=e.async();$('<div title="tooltip title"/>').appendTo("#qunit-fixture").on("inserted.bs.tooltip",function(){e.notEqual($(".tooltip").length,0,"tooltip was inserted"),e.ok(!0,"inserted event fired"),n()}).bootstrapTooltip("show")}),QUnit.test("should fire shown event",function(e){e.expect(1);var n=e.async();$('<div title="tooltip title"></div>').appendTo("#qunit-fixture").on("shown.bs.tooltip",function(){e.ok(!0,"shown was called"),n()}).bootstrapTooltip("show")}),QUnit.test("should not fire shown event when show was prevented",function(e){e.expect(1);var n=e.async();$('<div title="tooltip title"/>').on("show.bs.tooltip",function(t){t.preventDefault(),e.ok(!0,"show event fired"),n()}).on("shown.bs.tooltip",function(){e.ok(!1,"shown event fired")}).bootstrapTooltip("show")}),QUnit.test("should fire hide event",function(e){e.expect(1);var n=e.async();$('<div title="tooltip title"/>').appendTo("#qunit-fixture").on("shown.bs.tooltip",function(){$(this).bootstrapTooltip("hide")}).on("hide.bs.tooltip",function(){e.ok(!0,"hide event fired"),n()}).bootstrapTooltip("show")}),QUnit.test("should fire hidden event",function(e){e.expect(1);var n=e.async();$('<div title="tooltip title"/>').appendTo("#qunit-fixture").on("shown.bs.tooltip",function(){$(this).bootstrapTooltip("hide")}).on("hidden.bs.tooltip",function(){e.ok(!0,"hidden event fired"),n()}).bootstrapTooltip("show")}),QUnit.test("should not fire hidden event when hide was prevented",function(e){e.expect(1);var n=e.async();$('<div title="tooltip title"/>').appendTo("#qunit-fixture").on("shown.bs.tooltip",function(){$(this).bootstrapTooltip("hide")}).on("hide.bs.tooltip",function(t){t.preventDefault(),e.ok(!0,"hide event fired"),n()}).on("hidden.bs.tooltip",function(){e.ok(!1,"hidden event fired")}).bootstrapTooltip("show")}),QUnit.test("should destroy tooltip",function(e){e.expect(7);var n=$("<div/>").bootstrapTooltip().on("click.foo",function(){});e.ok(n.data("bs.tooltip"),"tooltip has data"),e.ok($._data(n[0],"events").mouseover&&$._data(n[0],"events").mouseout,"tooltip has hover events"),e.strictEqual($._data(n[0],"events").click[0].namespace,"foo","tooltip has extra click.foo event"),n.bootstrapTooltip("show"),n.bootstrapTooltip("dispose"),e.ok(!n.hasClass("in"),"tooltip is hidden"),e.ok(!$._data(n[0],"bs.tooltip"),"tooltip does not have data"),e.strictEqual($._data(n[0],"events").click[0].namespace,"foo","tooltip still has click.foo"),e.ok(!$._data(n[0],"events").mouseover&&!$._data(n[0],"events").mouseout,"tooltip does not have hover events")}),QUnit.test("should show tooltip when toggle is called",function(e){e.expect(1),$('<a href="#" rel="tooltip" title="tooltip on toggle"/>').appendTo("#qunit-fixture").bootstrapTooltip({trigger:"manual"}).bootstrapTooltip("toggle"),e.ok($(".tooltip").is(".fade.in"),"tooltip is faded in")}),QUnit.test("should hide previously shown tooltip when toggle is called on tooltip",function(e){e.expect(1),$('<a href="#" rel="tooltip" title="tooltip on toggle">@ResentedHook</a>').appendTo("#qunit-fixture").bootstrapTooltip({trigger:"manual"}).bootstrapTooltip("show"),$(".tooltip").bootstrapTooltip("toggle"),e.ok($(".tooltip").not(".fade.in"),"tooltip was faded out")}),QUnit.test("should place tooltips inside body when container is body",function(e){e.expect(3);var n=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({container:"body"}).bootstrapTooltip("show");e.notEqual($("body > .tooltip").length,0,"tooltip is direct descendant of body"),e.strictEqual($("#qunit-fixture > .tooltip").length,0,"tooltip is not in parent"),n.bootstrapTooltip("hide"),e.strictEqual($("body > .tooltip").length,0,"tooltip was removed from dom")}),QUnit.test("should add position class before positioning so that position-specific styles are taken into account",function(e){e.expect(1);var n="<style>.tooltip.right { white-space: nowrap; }.tooltip.right .tooltip-inner { max-width: none; }</style>",t=$(n).appendTo("head"),r=$("<div/>").appendTo("#qunit-fixture"),a=$('<a href="#" rel="tooltip" title="very very very very very very very very long tooltip in one line"/>').appendTo(r).bootstrapTooltip({placement:"right"}).bootstrapTooltip("show"),i=$(a.data("bs.tooltip").tip),s=Math.round(a.offset().top+a[0].offsetHeight/2-i[0].offsetHeight/2),o=Math.round(i.offset().top),u=s-o;e.ok(1>=u&&u>=-1),a.bootstrapTooltip("hide"),r.remove(),t.remove()}),QUnit.test("should use title attribute for tooltip text",function(e){e.expect(2);var n=$('<a href="#" rel="tooltip" title="Simple tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip();n.bootstrapTooltip("show"),e.strictEqual($(".tooltip").children(".tooltip-inner").text(),"Simple tooltip","title from title attribute is set"),n.bootstrapTooltip("hide"),e.strictEqual($(".tooltip").length,0,"tooltip removed from dom")}),QUnit.test("should prefer title attribute over title option",function(e){e.expect(2);var n=$('<a href="#" rel="tooltip" title="Simple tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({title:"This is a tooltip with some content"});n.bootstrapTooltip("show"),e.strictEqual($(".tooltip").children(".tooltip-inner").text(),"Simple tooltip","title is set from title attribute while preferred over title option"),n.bootstrapTooltip("hide"),e.strictEqual($(".tooltip").length,0,"tooltip removed from dom")}),QUnit.test("should use title option",function(e){e.expect(2);var n=$('<a href="#" rel="tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({title:"This is a tooltip with some content"});n.bootstrapTooltip("show"),e.strictEqual($(".tooltip").children(".tooltip-inner").text(),"This is a tooltip with some content","title from title option is set"),n.bootstrapTooltip("hide"),e.strictEqual($(".tooltip").length,0,"tooltip removed from dom")}),QUnit.test("should not error when trying to show an top-placed tooltip that has been removed from the dom",function(e){e.expect(1);var n=!0,t=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").one("show.bs.tooltip",function(){$(this).remove()}).bootstrapTooltip({placement:"top"});try{t.bootstrapTooltip("show")}catch(r){n=!1,console.log(r)}e.ok(n,".tooltip('show') should not throw an error if element no longer is in dom")}),QUnit.test("should place tooltip on top of element",function(e){e.expect(1);var n=e.async(),t='<div><p style="margin-top: 200px"><a href="#" title="very very very very very very very long tooltip">Hover me</a></p></div>',r=$(t).css({position:"absolute",bottom:0,left:0,textAlign:"right",width:300,height:300}).appendTo("#qunit-fixture"),a=r.find("a").css("margin-top",200).bootstrapTooltip({placement:"top",animate:!1}).bootstrapTooltip("show"),i=$(a.data("bs.tooltip").tip);setTimeout(function(){e.ok(Math.round(i.offset().top+i.outerHeight())<=Math.round(a.offset().top)),n()},0)}),QUnit.test("should show tooltip if leave event hasn't occurred before delay expires",function(e){e.expect(2);var n=e.async(),t=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({delay:150});setTimeout(function(){e.ok(!$(".tooltip").is(".fade.in"),"100ms: tooltip is not faded in")},100),setTimeout(function(){e.ok($(".tooltip").is(".fade.in"),"200ms: tooltip is faded in"),n()},200),t.trigger("mouseenter")}),QUnit.test("should not show tooltip if leave event occurs before delay expires",function(e){e.expect(2);var n=e.async(),t=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({delay:150});setTimeout(function(){e.ok(!$(".tooltip").is(".fade.in"),"100ms: tooltip not faded in"),t.trigger("mouseout")},100),setTimeout(function(){e.ok(!$(".tooltip").is(".fade.in"),"200ms: tooltip not faded in"),n()},200),t.trigger("mouseenter")}),QUnit.test("should not hide tooltip if leave event occurs and enter event occurs within the hide delay",function(e){e.expect(3);var n=e.async(),t=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({delay:{show:0,hide:150}});setTimeout(function(){e.ok($(".tooltip").is(".fade.in"),"1ms: tooltip faded in"),t.trigger("mouseout"),setTimeout(function(){e.ok($(".tooltip").is(".fade.in"),"100ms: tooltip still faded in"),t.trigger("mouseenter")},100),setTimeout(function(){e.ok($(".tooltip").is(".fade.in"),"200ms: tooltip still faded in"),n()},200)},0),t.trigger("mouseenter")}),QUnit.test("should not show tooltip if leave event occurs before delay expires",function(e){e.expect(2);var n=e.async(),t=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({delay:150});setTimeout(function(){e.ok(!$(".tooltip").is(".fade.in"),"100ms: tooltip not faded in"),t.trigger("mouseout")},100),setTimeout(function(){e.ok(!$(".tooltip").is(".fade.in"),"200ms: tooltip not faded in"),n()},200),t.trigger("mouseenter")}),QUnit.test("should not show tooltip if leave event occurs before delay expires, even if hide delay is 0",function(e){e.expect(2);var n=e.async(),t=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({delay:{show:150,hide:0}});setTimeout(function(){e.ok(!$(".tooltip").is(".fade.in"),"100ms: tooltip not faded in"),t.trigger("mouseout")},100),setTimeout(function(){e.ok(!$(".tooltip").is(".fade.in"),"250ms: tooltip not faded in"),n()},250),t.trigger("mouseenter")}),QUnit.test("should wait 200ms before hiding the tooltip",function(e){e.expect(3);var n=e.async(),t=$('<a href="#" rel="tooltip" title="Another tooltip"/>').appendTo("#qunit-fixture").bootstrapTooltip({delay:{show:0,hide:150}});setTimeout(function(){e.ok($(t.data("bs.tooltip").tip).is(".fade.in"),"1ms: tooltip faded in"),t.trigger("mouseout"),setTimeout(function(){e.ok($(t.data("bs.tooltip").tip).is(".fade.in"),"100ms: tooltip still faded in")},100),setTimeout(function(){e.ok(!$(t.data("bs.tooltip").tip).is(".in"),"200ms: tooltip removed"),n()},200)},0),t.trigger("mouseenter")}),QUnit.test("should correctly position tooltips on SVG elements",function(e){if(!window.SVGElement)return void e.expect(0);e.expect(2);var n=e.async(),t="<style>.tooltip, .tooltip *, .tooltip *:before, .tooltip *:after { box-sizing: border-box; }.tooltip { position: absolute; }.tooltip .tooltip-inner { width: 24px; height: 24px; font-family: Helvetica; }</style>",r=$(t).appendTo("head");$("#qunit-fixture").append('<div style="position: fixed; top: 0; left: 0;">  <svg width="200" height="200">    <circle cx="100" cy="100" r="10" title="m" id="theCircle" />  </svg></div>');var a=$("#theCircle");a.on("shown.bs.tooltip",function(){var t=$(".tooltip").offset();r.remove(),e.ok(Math.abs(t.left-88)<=1,"tooltip has correct horizontal location"),a.bootstrapTooltip("hide"),e.strictEqual($(".tooltip").length,0,"tooltip removed from dom"),n()}).bootstrapTooltip({placement:"top",trigger:"manual"}),a.bootstrapTooltip("show")}),QUnit.test("should not reload the tooltip on subsequent mouseenter events",function(e){e.expect(1);var n=function(){var e=Util.getUID("tooltip");return'<p id="tt-content">'+e+"</p><p>"+e+"</p><p>"+e+"</p>"},t=$('<span id="tt-outer" rel="tooltip" data-trigger="hover" data-placement="top">some text</span>').appendTo("#qunit-fixture");t.bootstrapTooltip({html:!0,animation:!1,trigger:"hover",delay:{show:0,hide:500},container:t,title:n}),$("#tt-outer").trigger("mouseenter");var r=$("#tt-content").text();$("#tt-content").trigger("mouseenter"),e.strictEqual(r,$("#tt-content").text())}),QUnit.test("should not reload the tooltip if the mouse leaves and re-enters before hiding",function(e){e.expect(4);var n=function(){var e=Util.getUID("tooltip");return'<p id="tt-content">'+e+"</p><p>"+e+"</p><p>"+e+"</p>"},t=$('<span id="tt-outer" rel="tooltip" data-trigger="hover" data-placement="top">some text</span>').appendTo("#qunit-fixture");t.bootstrapTooltip({html:!0,animation:!1,trigger:"hover",delay:{show:0,hide:500},title:n});var r=t.data("bs.tooltip");$("#tt-outer").trigger("mouseenter");var a=$("#tt-content").text();$("#tt-outer").trigger("mouseleave"),e.strictEqual(a,$("#tt-content").text()),e.ok("out"==r._hoverState,'the tooltip hoverState should be set to "out"'),$("#tt-outer").trigger("mouseenter"),e.ok("in"==r._hoverState,'the tooltip hoverState should be set to "in"'),e.strictEqual(a,$("#tt-content").text())}),QUnit.test("should correctly position tooltips on transformed elements",function(e){var n=document.documentElement.style;if(!("transform"in n||"webkitTransform"in n||"msTransform"in n))return void e.expect(0);e.expect(2);var t=e.async(),r="<style>#qunit-fixture { top: 0; left: 0; }.tooltip, .tooltip *, .tooltip *:before, .tooltip *:after { box-sizing: border-box; }.tooltip { position: absolute; }.tooltip .tooltip-inner { width: 24px; height: 24px; font-family: Helvetica; }#target { position: absolute; top: 100px; left: 50px; width: 100px; height: 200px; -webkit-transform: rotate(270deg); -ms-transform: rotate(270deg); transform: rotate(270deg); }</style>",a=$(r).appendTo("head"),i=$('<div id="target" title="1"/>').appendTo("#qunit-fixture");i.on("shown.bs.tooltip",function(){var n=$(".tooltip").offset();a.remove(),e.ok(Math.abs(n.left-88)<=1,"tooltip has correct horizontal location"),e.ok(Math.abs(n.top-126)<=1,"tooltip has correct vertical location"),i.bootstrapTooltip("hide"),t()}).bootstrapTooltip({trigger:"manual"}),i.bootstrapTooltip("show")}),QUnit.test("should do nothing when an attempt is made to hide an uninitialized tooltip",function(e){e.expect(1);var n=$('<span data-toggle="tooltip" title="some tip">some text</span>').appendTo("#qunit-fixture").on("hidden.bs.tooltip shown.bs.tooltip",function(){e.ok(!1,"should not fire any tooltip events")}).bootstrapTooltip("hide");e.strictEqual(n.data("bs.tooltip"),void 0,"should not initialize the tooltip")}),QUnit.test("should not remove tooltip if multiple triggers are set and one is still active",function(e){function a(){return r.hasClass("in")||"in"==t._hoverState}e.expect(41);var n=$("<button>Trigger</button>").appendTo("#qunit-fixture").bootstrapTooltip({trigger:"click hover focus",animation:!1}),t=n.data("bs.tooltip"),r=$(t.getTipElement()),i=[["mouseenter","mouseleave"],["focusin","focusout"],["click","click"],["mouseenter","focusin","focusout","mouseleave"],["mouseenter","focusin","mouseleave","focusout"],["focusin","mouseenter","mouseleave","focusout"],["focusin","mouseenter","focusout","mouseleave"],["click","focusin","mouseenter","focusout","mouseleave","click"],["mouseenter","click","focusin","focusout","mouseleave","click"],["mouseenter","focusin","click","click","mouseleave","focusout"]];e.ok(!a()),$.each(i,function(t,r){for(var i=0,s=r.length;s>i;i++)n.trigger(r[i]),e.equal(s-1>i,a())})})});