$(function(){"use strict";QUnit.module("dropdowns plugin"),QUnit.test("should be defined on jquery object",function(e){e.expect(1),e.ok($(document.body).dropdown,"dropdown method is defined")}),QUnit.module("dropdowns",{beforeEach:function(){$.fn.bootstrapDropdown=$.fn.dropdown.noConflict()},afterEach:function(){$.fn.dropdown=$.fn.bootstrapDropdown,delete $.fn.bootstrapDropdown}}),QUnit.test("should provide no conflict",function(e){e.expect(1),e.strictEqual($.fn.dropdown,void 0,"dropdown was set back to undefined (org value)")}),QUnit.test("should throw explicit error on undefined method",function(e){e.expect(1);var n=$("<div/>");n.bootstrapDropdown();try{n.bootstrapDropdown("noMethod")}catch(t){e.strictEqual(t.message,'No method named "noMethod"')}}),QUnit.test("should return jquery collection containing the element",function(e){e.expect(2);var n=$("<div/>"),t=n.bootstrapDropdown();e.ok(t instanceof $,"returns jquery collection"),e.strictEqual(t[0],n[0],"collection contains element")}),QUnit.test("should not open dropdown if target is disabled via attribute",function(e){e.expect(1);var n='<ul class="tabs"><li class="dropdown"><button disabled href="#" class="btn dropdown-toggle" data-toggle="dropdown">Dropdown</button><ul class="dropdown-menu"><li><a href="#">Secondary link</a></li><li><a href="#">Something else here</a></li><li class="divider"/><li><a href="#">Another link</a></li></ul></li></ul>',t=$(n).find('[data-toggle="dropdown"]').bootstrapDropdown().trigger("click");e.ok(!t.parent(".dropdown").hasClass("open"),'"open" class added on click')}),QUnit.test('should set aria-expanded="true" on target when dropdown menu is shown',function(e){e.expect(1);var n='<ul class="tabs"><li class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown" aria-expanded="false">Dropdown</a><ul class="dropdown-menu"><li><a href="#">Secondary link</a></li><li><a href="#">Something else here</a></li><li class="divider"/><li><a href="#">Another link</a></li></ul></li></ul>',t=$(n).find('[data-toggle="dropdown"]').bootstrapDropdown().trigger("click");e.strictEqual(t.attr("aria-expanded"),"true",'aria-expanded is set to string "true" on click')}),QUnit.test('should set aria-expanded="false" on target when dropdown menu is hidden',function(e){e.expect(1);var n=e.async(),t='<ul class="tabs"><li class="dropdown"><a href="#" class="dropdown-toggle" aria-expanded="false" data-toggle="dropdown">Dropdown</a><ul class="dropdown-menu"><li><a href="#">Secondary link</a></li><li><a href="#">Something else here</a></li><li class="divider"/><li><a href="#">Another link</a></li></ul></li></ul>',r=$(t).appendTo("#qunit-fixture").find('[data-toggle="dropdown"]').bootstrapDropdown();r.parent(".dropdown").on("hidden.bs.dropdown",function(){e.strictEqual(r.attr("aria-expanded"),"false",'aria-expanded is set to string "false" on hide'),n()}),r.trigger("click"),$(document.body).trigger("click")}),QUnit.test("should not open dropdown if target is disabled via class",function(e){e.expect(1);var n='<ul class="tabs"><li class="dropdown"><button href="#" class="btn dropdown-toggle disabled" data-toggle="dropdown">Dropdown</button><ul class="dropdown-menu"><li><a href="#">Secondary link</a></li><li><a href="#">Something else here</a></li><li class="divider"/><li><a href="#">Another link</a></li></ul></li></ul>',t=$(n).find('[data-toggle="dropdown"]').bootstrapDropdown().trigger("click");e.ok(!t.parent(".dropdown").hasClass("open"),'"open" class added on click')}),QUnit.test("should add class open to menu if clicked",function(e){e.expect(1);var n='<ul class="tabs"><li class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown">Dropdown</a><ul class="dropdown-menu"><li><a href="#">Secondary link</a></li><li><a href="#">Something else here</a></li><li class="divider"/><li><a href="#">Another link</a></li></ul></li></ul>',t=$(n).find('[data-toggle="dropdown"]').bootstrapDropdown().trigger("click");e.ok(t.parent(".dropdown").hasClass("open"),'"open" class added on click')}),QUnit.test("should test if element has a # before assuming it's a selector",function(e){e.expect(1);var n='<ul class="tabs"><li class="dropdown"><a href="/foo/" class="dropdown-toggle" data-toggle="dropdown">Dropdown</a><ul class="dropdown-menu"><li><a href="#">Secondary link</a></li><li><a href="#">Something else here</a></li><li class="divider"/><li><a href="#">Another link</a></li></ul></li></ul>',t=$(n).find('[data-toggle="dropdown"]').bootstrapDropdown().trigger("click");e.ok(t.parent(".dropdown").hasClass("open"),'"open" class added on click')}),QUnit.test('should remove "open" class if body is clicked',function(e){e.expect(2);var n='<ul class="tabs"><li class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown">Dropdown</a><ul class="dropdown-menu"><li><a href="#">Secondary link</a></li><li><a href="#">Something else here</a></li><li class="divider"/><li><a href="#">Another link</a></li></ul></li></ul>',t=$(n).appendTo("#qunit-fixture").find('[data-toggle="dropdown"]').bootstrapDropdown().trigger("click");e.ok(t.parent(".dropdown").hasClass("open"),'"open" class added on click'),$(document.body).trigger("click"),e.ok(!t.parent(".dropdown").hasClass("open"),'"open" class removed')}),QUnit.test('should remove "open" class if body is clicked, with multiple dropdowns',function(e){e.expect(7);var n='<ul class="nav"><li><a href="#menu1">Menu 1</a></li><li class="dropdown" id="testmenu"><a class="dropdown-toggle" data-toggle="dropdown" href="#testmenu">Test menu <span class="caret"/></a><ul class="dropdown-menu"><li><a href="#sub1">Submenu 1</a></li></ul></li></ul><div class="btn-group"><button class="btn">Actions</button><button class="btn dropdown-toggle" data-toggle="dropdown"><span class="caret"/></button><ul class="dropdown-menu"><li><a href="#">Action 1</a></li></ul></div>',t=$(n).appendTo("#qunit-fixture").find('[data-toggle="dropdown"]'),r=t.first(),a=t.last();e.strictEqual(t.length,2,"two dropdowns"),r.trigger("click"),e.strictEqual(r.parents(".open").length,1,'"open" class added on click'),e.strictEqual($("#qunit-fixture .open").length,1,"only one dropdown is open"),$(document.body).trigger("click"),e.strictEqual($("#qunit-fixture .open").length,0,'"open" class removed'),a.trigger("click"),e.strictEqual(a.parent(".open").length,1,'"open" class added on click'),e.strictEqual($("#qunit-fixture .open").length,1,"only one dropdown is open"),$(document.body).trigger("click"),e.strictEqual($("#qunit-fixture .open").length,0,'"open" class removed')}),QUnit.test("should fire show and hide event",function(e){e.expect(2);var n='<ul class="tabs"><li class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown">Dropdown</a><ul class="dropdown-menu"><li><a href="#">Secondary link</a></li><li><a href="#">Something else here</a></li><li class="divider"/><li><a href="#">Another link</a></li></ul></li></ul>',t=$(n).appendTo("#qunit-fixture").find('[data-toggle="dropdown"]').bootstrapDropdown(),r=e.async();t.parent(".dropdown").on("show.bs.dropdown",function(){e.ok(!0,"show was fired")}).on("hide.bs.dropdown",function(){e.ok(!0,"hide was fired"),r()}),t.trigger("click"),$(document.body).trigger("click")}),QUnit.test("should fire shown and hidden event",function(e){e.expect(2);var n='<ul class="tabs"><li class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown">Dropdown</a><ul class="dropdown-menu"><li><a href="#">Secondary link</a></li><li><a href="#">Something else here</a></li><li class="divider"/><li><a href="#">Another link</a></li></ul></li></ul>',t=$(n).appendTo("#qunit-fixture").find('[data-toggle="dropdown"]').bootstrapDropdown(),r=e.async();t.parent(".dropdown").on("shown.bs.dropdown",function(){e.ok(!0,"shown was fired")}).on("hidden.bs.dropdown",function(){e.ok(!0,"hidden was fired"),r()}),t.trigger("click"),$(document.body).trigger("click")}),QUnit.test("should fire shown and hidden event with a relatedTarget",function(e){e.expect(2);var n='<ul class="tabs"><li class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown">Dropdown</a><ul class="dropdown-menu"><li><a href="#">Secondary link</a></li><li><a href="#">Something else here</a></li><li class="divider"/><li><a href="#">Another link</a></li></ul></li></ul>',t=$(n).appendTo("#qunit-fixture").find('[data-toggle="dropdown"]').bootstrapDropdown(),r=e.async();t.parent(".dropdown").on("hidden.bs.dropdown",function(n){e.strictEqual(n.relatedTarget,t[0]),r()}).on("shown.bs.dropdown",function(n){e.strictEqual(n.relatedTarget,t[0]),$(document.body).trigger("click")}),t.trigger("click")}),QUnit.test("should ignore keyboard events within <input>s and <textarea>s",function(e){e.expect(3);var n=e.async(),t='<ul class="tabs"><li class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown">Dropdown</a><ul class="dropdown-menu"><li><a href="#">Secondary link</a></li><li><a href="#">Something else here</a></li><li class="divider"/><li><a href="#">Another link</a></li><li><input type="text" id="input"></li><li><textarea id="textarea"/></li></ul></li></ul>',r=$(t).appendTo("#qunit-fixture").find('[data-toggle="dropdown"]').bootstrapDropdown(),a=$("#input"),i=$("#textarea");r.parent(".dropdown").on("shown.bs.dropdown",function(){e.ok(!0,"shown was fired"),a.trigger("focus").trigger($.Event("keydown",{which:38})),e.ok($(document.activeElement).is(a),"input still focused"),i.trigger("focus").trigger($.Event("keydown",{which:38})),e.ok($(document.activeElement).is(i),"textarea still focused"),n()}),r.trigger("click")}),QUnit.test("should skip disabled element when using keyboard navigation",function(e){e.expect(1);var n='<ul class="tabs"><li class="dropdown"><a href="#" class="dropdown-toggle" data-toggle="dropdown">Dropdown</a><ul class="dropdown-menu"><li class="disabled"><a href="#">Disabled link</a></li><li><a href="#">Another link</a></li></ul></li></ul>',t=$(n).appendTo("#qunit-fixture").find('[data-toggle="dropdown"]').bootstrapDropdown().trigger("click");t.trigger($.Event("keydown",{which:40})),t.trigger($.Event("keydown",{which:40})),e.ok(!$(document.activeElement).parent().is(".disabled"),".disabled is not focused")}),QUnit.test("should not close the dropdown if the user clicks on a text field",function(e){e.expect(1);var n='<div class="btn-group"><button type="button" data-toggle="dropdown">Dropdown</button><ul class="dropdown-menu"><li><input id="textField" type="text" /></li></ul></div>',t=$(n).appendTo("#qunit-fixture").find('[data-toggle="dropdown"]').bootstrapDropdown().trigger("click");$("#textField").trigger("click"),e.ok(t.parent(".btn-group").hasClass("open"),"dropdown menu is open")}),QUnit.test("should not close the dropdown if the user clicks on a textarea",function(e){e.expect(1);var n='<div class="btn-group"><button type="button" data-toggle="dropdown">Dropdown</button><ul class="dropdown-menu"><li><textarea id="textArea"></textarea></li></ul></div>',t=$(n).appendTo("#qunit-fixture").find('[data-toggle="dropdown"]').bootstrapDropdown().trigger("click");$("#textArea").trigger("click"),e.ok(t.parent(".btn-group").hasClass("open"),"dropdown menu is open")})});