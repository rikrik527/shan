$(function(){"use strict";QUnit.module("modal plugin"),QUnit.test("should be defined on jquery object",function(e){e.expect(1),e.ok($(document.body).modal,"modal method is defined")}),QUnit.module("modal",{beforeEach:function(){$.fn.bootstrapModal=$.fn.modal.noConflict()},afterEach:function(){$.fn.modal=$.fn.bootstrapModal,delete $.fn.bootstrapModal}}),QUnit.test("should provide no conflict",function(e){e.expect(1),e.strictEqual($.fn.modal,void 0,"modal was set back to undefined (orig value)")}),QUnit.test("should throw explicit error on undefined method",function(e){e.expect(1);var n=$('<div id="modal-test"/>');n.bootstrapModal();try{n.bootstrapModal("noMethod")}catch(t){e.strictEqual(t.message,'No method named "noMethod"')}}),QUnit.test("should return jquery collection containing the element",function(e){e.expect(2);var n=$('<div id="modal-test"/>'),t=n.bootstrapModal();e.ok(t instanceof $,"returns jquery collection"),e.strictEqual(t[0],n[0],"collection contains element")}),QUnit.test("should expose defaults var for settings",function(e){e.expect(1),e.ok($.fn.bootstrapModal.Constructor.Default,"default object exposed")}),QUnit.test("should insert into dom when show method is called",function(e){e.expect(1);var n=e.async();$('<div id="modal-test"/>').on("shown.bs.modal",function(){e.notEqual($("#modal-test").length,0,"modal inserted into dom"),n()}).bootstrapModal("show")}),QUnit.test("should fire show event",function(e){e.expect(1);var n=e.async();$('<div id="modal-test"/>').on("show.bs.modal",function(){e.ok(!0,"show event fired"),n()}).bootstrapModal("show")}),QUnit.test("should not fire shown when show was prevented",function(e){e.expect(1);var n=e.async();$('<div id="modal-test"/>').on("show.bs.modal",function(t){t.preventDefault(),e.ok(!0,"show event fired"),n()}).on("shown.bs.modal",function(){e.ok(!1,"shown event fired")}).bootstrapModal("show")}),QUnit.test("should hide modal when hide is called",function(e){e.expect(3);var n=e.async();$('<div id="modal-test"/>').on("shown.bs.modal",function(){e.ok($("#modal-test").is(":visible"),"modal visible"),e.notEqual($("#modal-test").length,0,"modal inserted into dom"),$(this).bootstrapModal("hide")}).on("hidden.bs.modal",function(){e.ok(!$("#modal-test").is(":visible"),"modal hidden"),n()}).bootstrapModal("show")}),QUnit.test("should toggle when toggle is called",function(e){e.expect(3);var n=e.async();$('<div id="modal-test"/>').on("shown.bs.modal",function(){e.ok($("#modal-test").is(":visible"),"modal visible"),e.notEqual($("#modal-test").length,0,"modal inserted into dom"),$(this).bootstrapModal("toggle")}).on("hidden.bs.modal",function(){e.ok(!$("#modal-test").is(":visible"),"modal hidden"),n()}).bootstrapModal("toggle")}),QUnit.test('should remove from dom when click [data-dismiss="modal"]',function(e){e.expect(3);var n=e.async();$('<div id="modal-test"><span class="close" data-dismiss="modal"/></div>').on("shown.bs.modal",function(){e.ok($("#modal-test").is(":visible"),"modal visible"),e.notEqual($("#modal-test").length,0,"modal inserted into dom"),$(this).find(".close").trigger("click")}).on("hidden.bs.modal",function(){e.ok(!$("#modal-test").is(":visible"),"modal hidden"),n()}).bootstrapModal("toggle")}),QUnit.test('should allow modal close with "backdrop:false"',function(e){e.expect(2);var n=e.async();$('<div id="modal-test" data-backdrop="false"/>').on("shown.bs.modal",function(){e.ok($("#modal-test").is(":visible"),"modal visible"),$(this).bootstrapModal("hide")}).on("hidden.bs.modal",function(){e.ok(!$("#modal-test").is(":visible"),"modal hidden"),n()}).bootstrapModal("show")}),QUnit.test("should close modal when clicking outside of modal-content",function(e){e.expect(3);var n=e.async();$('<div id="modal-test"><div class="contents"/></div>').on("shown.bs.modal",function(){e.notEqual($("#modal-test").length,0,"modal inserted into dom"),$(".contents").trigger("click"),e.ok($("#modal-test").is(":visible"),"modal visible"),$("#modal-test").trigger("click")}).on("hidden.bs.modal",function(){e.ok(!$("#modal-test").is(":visible"),"modal hidden"),n()}).bootstrapModal("show")}),QUnit.test("should close modal when escape key is pressed via keydown",function(e){e.expect(3);var n=e.async(),t=$('<div id="modal-test"/>');t.on("shown.bs.modal",function(){e.ok($("#modal-test").length,"modal inserted into dom"),e.ok($("#modal-test").is(":visible"),"modal visible"),t.trigger($.Event("keydown",{which:27})),setTimeout(function(){e.ok(!$("#modal-test").is(":visible"),"modal hidden"),t.remove(),n()},0)}).bootstrapModal("show")}),QUnit.test("should not close modal when escape key is pressed via keyup",function(e){e.expect(3);var n=e.async(),t=$('<div id="modal-test"/>');t.on("shown.bs.modal",function(){e.ok($("#modal-test").length,"modal inserted into dom"),e.ok($("#modal-test").is(":visible"),"modal visible"),t.trigger($.Event("keyup",{which:27})),setTimeout(function(){e.ok(t.is(":visible"),"modal still visible"),t.remove(),n()},0)}).bootstrapModal("show")}),QUnit.test("should trigger hide event once when clicking outside of modal-content",function(e){e.expect(1);var t,n=e.async();$('<div id="modal-test"><div class="contents"/></div>').on("shown.bs.modal",function(){t=0,$("#modal-test").trigger("click")}).on("hide.bs.modal",function(){t+=1,e.strictEqual(t,1,"modal hide triggered once"),n()}).bootstrapModal("show")}),QUnit.test("should remove aria-hidden attribute when shown, add it back when hidden",function(e){e.expect(3);var n=e.async();$('<div id="modal-test" aria-hidden="true"/>').on("shown.bs.modal",function(){e.notOk($("#modal-test").is("[aria-hidden]"),"aria-hidden attribute removed"),$(this).bootstrapModal("hide")}).on("hidden.bs.modal",function(){e.ok($("#modal-test").is("[aria-hidden]"),"aria-hidden attribute added"),e.strictEqual($("#modal-test").attr("aria-hidden"),"true",'correct aria-hidden="true" added'),n()}).bootstrapModal("show")}),QUnit.test('should close reopened modal with [data-dismiss="modal"] click',function(e){e.expect(2);var n=e.async();$('<div id="modal-test"><div class="contents"><div id="close" data-dismiss="modal"/></div></div>').one("shown.bs.modal",function(){$("#close").trigger("click")}).one("hidden.bs.modal",function(){e.ok(!$("#modal-test").is(":visible"),"modal hidden"),$(this).one("shown.bs.modal",function(){$("#close").trigger("click")}).one("hidden.bs.modal",function(){e.ok(!$("#modal-test").is(":visible"),"modal hidden"),n()}).bootstrapModal("show")}).bootstrapModal("show")}),QUnit.test("should restore focus to toggling element when modal is hidden after having been opened via data-api",function(e){e.expect(1);var n=e.async(),t=$('<button data-toggle="modal" data-target="#modal-test"/>').appendTo("#qunit-fixture");$('<div id="modal-test"><div class="contents"><div id="close" data-dismiss="modal"/></div></div>').on("hidden.bs.modal",function(){setTimeout(function(){e.ok($(document.activeElement).is(t),"toggling element is once again focused"),n()},0)}).on("shown.bs.modal",function(){$("#close").trigger("click")}).appendTo("#qunit-fixture"),t.trigger("click")}),QUnit.test("should not restore focus to toggling element if the associated show event gets prevented",function(e){e.expect(1);var n=e.async(),t=$('<button data-toggle="modal" data-target="#modal-test"/>').appendTo("#qunit-fixture"),r=$('<button id="other-btn"/>').appendTo("#qunit-fixture");$('<div id="modal-test"><div class="contents"><div id="close" data-dismiss="modal"/></div>').one("show.bs.modal",function(e){e.preventDefault(),r.trigger("focus"),setTimeout($.proxy(function(){$(this).bootstrapModal("show")},this),0)}).on("hidden.bs.modal",function(){setTimeout(function(){e.ok($(document.activeElement).is(r),"focus returned to toggling element"),n()},0)}).on("shown.bs.modal",function(){$("#close").trigger("click")}).appendTo("#qunit-fixture"),t.trigger("click")}),QUnit.test("should restore inline body padding after closing",function(e){e.expect(2);var n=e.async(),t=0,r=$(document.body);r.css("padding-right",t),$('<div id="modal-test"/>').on("hidden.bs.modal",function(){var a=parseInt(r.css("padding-right"),10);e.notStrictEqual(r.attr("style"),"","body has non-empty style attribute"),e.strictEqual(a,t,"original body padding was not changed"),r.removeAttr("style"),n()}).on("shown.bs.modal",function(){$(this).bootstrapModal("hide")}).bootstrapModal("show")}),QUnit.test("should ignore values set via CSS when trying to restore body padding after closing",function(e){e.expect(1);var n=e.async(),t=$(document.body),r=$("<style>body { padding-right: 42px; }</style>").appendTo("head");$('<div id="modal-test"/>').on("hidden.bs.modal",function(){e.ok(!t.attr("style"),"body does not have inline padding set"),r.remove(),n()}).on("shown.bs.modal",function(){$(this).bootstrapModal("hide")}).bootstrapModal("show")}),QUnit.test("should ignore other inline styles when trying to restore body padding after closing",function(e){e.expect(2);var n=e.async(),t=$(document.body),r=$("<style>body { padding-right: 42px; }</style>").appendTo("head");t.css("color","red"),$('<div id="modal-test"/>').on("hidden.bs.modal",function(){e.strictEqual(t[0].style.paddingRight,"","body does not have inline padding set"),e.strictEqual(t[0].style.color,"red","body still has other inline styles set"),t.removeAttr("style"),r.remove(),n()}).on("shown.bs.modal",function(){$(this).bootstrapModal("hide")}).bootstrapModal("show")}),QUnit.test("should properly restore non-pixel inline body padding after closing",function(e){e.expect(1);var n=e.async(),t=$(document.body);t.css("padding-right","5%"),$('<div id="modal-test"/>').on("hidden.bs.modal",function(){e.strictEqual(t[0].style.paddingRight,"5%","body does not have inline padding set"),t.removeAttr("style"),n()}).on("shown.bs.modal",function(){$(this).bootstrapModal("hide")}).bootstrapModal("show")})});