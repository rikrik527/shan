$(function(){"use strict";QUnit.module("button plugin"),QUnit.test("should be defined on jquery object",function(e){e.expect(1),e.ok($(document.body).button,"button method is defined")}),QUnit.module("button",{beforeEach:function(){$.fn.bootstrapButton=$.fn.button.noConflict()},afterEach:function(){$.fn.button=$.fn.bootstrapButton,delete $.fn.bootstrapButton}}),QUnit.test("should provide no conflict",function(e){e.expect(1),e.strictEqual($.fn.button,void 0,"button was set back to undefined (org value)")}),QUnit.test("should return jquery collection containing the element",function(e){e.expect(2);var n=$("<div/>"),t=n.bootstrapButton();e.ok(t instanceof $,"returns jquery collection"),e.strictEqual(t[0],n[0],"collection contains element")}),QUnit.test("should toggle active",function(e){e.expect(2);var n=$('<button class="btn" data-toggle="button">mdo</button>');e.ok(!n.hasClass("active"),"btn does not have active class"),n.bootstrapButton("toggle"),e.ok(n.hasClass("active"),"btn has class active")}),QUnit.test("should toggle active when btn children are clicked",function(e){e.expect(2);var n=$('<button class="btn" data-toggle="button">mdo</button>'),t=$("<i/>");n.append(t).appendTo("#qunit-fixture"),e.ok(!n.hasClass("active"),"btn does not have active class"),t.trigger("click"),e.ok(n.hasClass("active"),"btn has class active")}),QUnit.test("should toggle aria-pressed",function(e){e.expect(2);var n=$('<button class="btn" data-toggle="button" aria-pressed="false">redux</button>');e.strictEqual(n.attr("aria-pressed"),"false","btn aria-pressed state is false"),n.bootstrapButton("toggle"),e.strictEqual(n.attr("aria-pressed"),"true","btn aria-pressed state is true")}),QUnit.test("should toggle aria-pressed when btn children are clicked",function(e){e.expect(2);var n=$('<button class="btn" data-toggle="button" aria-pressed="false">redux</button>'),t=$("<i/>");n.append(t).appendTo("#qunit-fixture"),e.strictEqual(n.attr("aria-pressed"),"false","btn aria-pressed state is false"),t.trigger("click"),e.strictEqual(n.attr("aria-pressed"),"true","btn aria-pressed state is true")}),QUnit.test("should check for closest matching toggle",function(e){e.expect(12);var n='<div class="btn-group" data-toggle="buttons"><label class="btn btn-primary active"><input type="radio" name="options" id="option1" checked="true"> Option 1</label><label class="btn btn-primary"><input type="radio" name="options" id="option2"> Option 2</label><label class="btn btn-primary"><input type="radio" name="options" id="option3"> Option 3</label></div>',t=$(n).appendTo("#qunit-fixture"),r=t.children().eq(0),a=t.children().eq(1);e.ok(r.hasClass("active"),"btn1 has active class"),e.ok(r.find("input").prop("checked"),"btn1 is checked"),e.ok(!a.hasClass("active"),"btn2 does not have active class"),e.ok(!a.find("input").prop("checked"),"btn2 is not checked"),a.find("input").trigger("click"),e.ok(!r.hasClass("active"),"btn1 does not have active class"),e.ok(!r.find("input").prop("checked"),"btn1 is not checked"),e.ok(a.hasClass("active"),"btn2 has active class"),e.ok(a.find("input").prop("checked"),"btn2 is checked"),a.find("input").trigger("click"),e.ok(!r.hasClass("active"),"btn1 does not have active class"),e.ok(!r.find("input").prop("checked"),"btn1 is not checked"),e.ok(a.hasClass("active"),"btn2 has active class"),e.ok(a.find("input").prop("checked"),"btn2 is checked")})});